apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    ai.clipper.container.label: {{ cluster_name }}
    ai.clipper.name: metrics
  name: metrics-at-{{ cluster_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      ai.clipper.container.label: {{ cluster_name }}
      ai.clipper.name: metrics
  template:
    metadata:
      labels:
        ai.clipper.container.label: {{ cluster_name }}
        ai.clipper.name: metrics
    spec:
      containers:
      - image: prom/prometheus:{{ version }}
        args: 
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--web.console.libraries=/etc/prometheus/console_libraries"
        - "--web.console.templates=/etc/prometheus/consoles"
        - "--web.enable-lifecycle"
        name: metrics
        ports:
        - containerPort: 1390
        - containerPort: 9090
        livenessProbe:
          httpGet:
            port: 9090
            path: "/metrics"
          initialDelaySeconds: 5
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            port: 9090
            path: "/metrics"
          initialDelaySeconds: 5
          timeoutSeconds: 30
        volumeMounts:
        - name: config-volume #This name needs to match the one under "volumes"
          mountPath: /etc/prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config-at-{{ cluster_name }} #This name needs to match the configmap created in the same namespace
            items:
            - key: prom_config.yml #The name of the "data" field inside configmap
              path: prometheus.yml #Write the a file called prometheus.yml inside mountPath
      restartPolicy: Always
